name: OAS-TO-KONG-REPO     
on:
  workflow_dispatch:
    inputs:
      api_repo_name:
        description: 'API Repository name'
        required: true
      api_repo_branch:
        description: Choose the branch name for API Repository
        required: true
      global_config_repo_name:
        description: 'Global Config Repository name'
        required: true  
      gobal_config_branch:
        description: Choose the branch name for Global Config Repository
        required: true
      environment:
        description: 'The environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod
          - test    
jobs:
  OAS_TO_KONG_REPO:
    name: Publish Spec to Kong Repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout global config code 
        uses: actions/checkout@v2
        with:
          repository: 'Ani-maurya/${{ github.event.inputs.global_config_repo_name }}'
          ref: '${{ github.event.inputs.gobal_config_branch }}'
          path: global-config
      
      - name: Checkout code from API repo
        uses: actions/checkout@v2
        with:
          repository: 'Ani-maurya/${{ github.event.inputs.api_repo_name }}'
          ref: '${{ github.event.inputs.api_repo_branch }}'
          path: api

      - name: Download jq
        run: |
          sudo apt install jq -y
          jq --version

      - name: Download yq
        run: |
          sudo snap install yq
          yq --version
      
      - name: Install Deck CLI
        run: |       
          curl -sL https://github.com/kong/deck/releases/download/v1.34.0/deck_1.34.0_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp 
          sudo cp /tmp/deck /usr/local/bin/


      - name: Find OAS file name in the directory
        run: |
          cd api/Apiconfig
          SPEC_FILE=$(ls -p | grep -v / | grep -v spectral.yaml | grep -v rulesets-kong.yaml)
          echo "SPEC_FILE=$SPEC_FILE" >> $GITHUB_ENV  

      # - name: Inso Linting
      #   run: |
      #     spectral --version
      #     spectral lint ./api/Apiconfig/${{ env.SPEC_FILE }} --ruleset ./api/Apiconfig/.spectral.yaml

      - name: Generate Kong config from OAS
        run:  deck file openapi2kong -s api/Apiconfig/${{ env.SPEC_FILE }} -o kong.yaml

      - name: Add Global plugins
        run:  cat kong.yaml | deck file add-plugins ./global-config/${{ github.event.inputs.environment }}/global-level-plugins.yaml -o kong.yaml

      - name: Add Route plugins
        run:  cat kong.yaml | deck file add-plugins ./global-config/${{ github.event.inputs.environment }}/route-level-plugins.yaml -o kong.yaml 

      - name: Add Service plugins
        run:  cat kong.yaml | deck file add-plugins ./global-config/${{ github.event.inputs.environment }}/service-level-plugins.yaml -o kong.yaml

      - name: Validate Kong configuration file against linting ruleset
        run:  deck file lint -s kong.yaml ./api/Apiconfig/rulesets-kong.yaml    
      
      - name: Dynamically adding the API spec to OAS validation
        run: |
          FILE_CONTENT=$(< cat api/Apiconfig/${{ env.SPEC_FILE }})
          echo $FILE_CONTENT
          yq eval -i '.services[].plugins[] |= (select(.name == "oas-validation") | .config.api_spec = "$FILE_CONTENT" )' kong.yaml
          cat kong.yaml

      - name: Push artifact to Kong Repo
        run: |
          cp kong.yaml ./api/Apiconfig/Kongconfig/Kong-${{ env.SPEC_FILE }}
          cd api
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git add ./Apiconfig/Kongconfig/Kong-${{ env.SPEC_FILE }}
          git commit -m "update Kong config file"
          git push origin ${{ github.event.inputs.api_repo_branch }}    